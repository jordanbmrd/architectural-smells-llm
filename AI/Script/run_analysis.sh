#!/bin/bash

# R√©cup√®re le dossier de la release pass√© en argument
RELEASE_DIR="$1"

if [ -z "$RELEASE_DIR" ]; then
    echo "‚ùå Usage: ./run_analysis.sh <release_dir>"
    exit 1
fi

if [ ! -d "$RELEASE_DIR" ]; then
    echo "‚ùå Error: directory '$RELEASE_DIR' does not exist"
    exit 1
fi

# Affiche la version de Python utilis√©e
PYTHON_PATH=$(which python3)
PYTHON_VERSION=$($PYTHON_PATH --version)
echo "üß™ Python utilis√© : $PYTHON_PATH (version $PYTHON_VERSION)"

# V√©rifie la pr√©sence du fichier de config dans le dossier de la release
CONFIG_FILE="$RELEASE_DIR/code_quality_config.yaml"
if [ ! -f "$CONFIG_FILE" ]; then
    echo "‚ö†Ô∏è config file not found in release dir, copying default"
    cp ./code_quality_config.yaml "$CONFIG_FILE"
fi

# Ex√©cution de l'analyse dans le dossier de la release
echo "üîç Analyzing code in $RELEASE_DIR"
analyze_code_quality "$RELEASE_DIR"

# Supposons que analyze_code_quality cr√©e son output dans le dossier courant,
# on d√©place le fichier r√©sultant dans le dossier de la release s‚Äôil n‚Äôy est pas d√©j√†
if [ -f "code_quality_report.csv" ] && [ ! -f "$RELEASE_DIR/code_quality_report.csv" ]; then
    mv code_quality_report.csv "$RELEASE_DIR/"
fi
